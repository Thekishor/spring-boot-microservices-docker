
services:
  discovery-server:
    image: thekishor/discovery-server:0.0.1
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - microservice-docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://discovery-server:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  config-server:
    image: thekishor/config-server:0.0.1
    container_name: config-server
    ports:
      - "8888:8888"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://config-server:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - microservice-docker

  cloud-gateway:
    image: thekishor/cloud-gateway:0.0.1
    container_name: cloud-gateway
    ports:
      - "8060:8060"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://cloud-gateway:8060/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - microservice-docker
    restart: always

  user-service:
    image: thekishor/user-service:0.0.1
    container_name: user-service
    ports:
      - "8089:8089"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATASOURCE_URL=${POSTGRES_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=${POSTGRES_DIALECT}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${HIBERNATE_DDL}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://user-service:8089/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - microservice-docker
    restart: always

  postgres:
    image: postgres:17
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - microservice-docker
    restart: unless-stopped

  product-service:
    image: thekishor/product-service:0.0.1
    container_name: product-service
    ports:
      - "8090:8090"
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=${MYSQL_URL}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=${MYSQL_DIALECT}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${HIBERNATE_DDL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://product-service:8090/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - microservice-docker
    restart: always

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DB}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h mysql -u${MYSQL_USERNAME} -p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - microservice-docker
    restart: unless-stopped

networks:
  microservice-docker:
    driver: bridge
volumes:
  postgres_data:
  mysql_data: